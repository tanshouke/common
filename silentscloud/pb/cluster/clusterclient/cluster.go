// Code generated by goctl. DO NOT EDIT.
// Source: cluster.proto

package clusterclient

import (
	"context"

	"cluster/types/cluster"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ClusterInfo     = cluster.ClusterInfo
	ClusterRequest  = cluster.ClusterRequest
	ClusterResponse = cluster.ClusterResponse

	Cluster interface {
		Cluster(ctx context.Context, in *ClusterRequest, opts ...grpc.CallOption) (*ClusterResponse, error)
	}

	defaultCluster struct {
		cli zrpc.Client
	}
)

func NewCluster(cli zrpc.Client) Cluster {
	return &defaultCluster{
		cli: cli,
	}
}

func (m *defaultCluster) Cluster(ctx context.Context, in *ClusterRequest, opts ...grpc.CallOption) (*ClusterResponse, error) {
	client := cluster.NewClusterClient(m.cli.Conn())
	return client.Cluster(ctx, in, opts...)
}
